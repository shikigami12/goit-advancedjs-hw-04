{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\n\n/**\n * Configuration for Pixabay API requests\n */\nclass RequestConfig {\n  /**\n   * Creates a new request configuration with default parameters\n   */\n  constructor() {\n    this.params = {\n      key: '',\n      q: '',\n      image_type: 'photo',\n      orientation: 'horizontal',\n      safesearch: true,\n      per_page: 15,\n      page: 1,\n    };\n  }\n\n  /**\n   * Sets the API key for authentication\n   * @param {string} apiKey - Pixabay API key\n   */\n  setApiKey(apiKey) {\n    this.params.key = apiKey;\n  }\n\n  /**\n   * Sets the search query\n   * @param {string} query - Search term\n   */\n  setQuery(query) {\n    this.params.q = query;\n  }\n\n  /**\n   * Sets the page number for pagination\n   * @param {number} page - Page number\n   */\n  setPage(page) {\n    this.params.page = page;\n  }\n}\n\n/**\n * Class representing a single image from Pixabay\n */\nclass ResponseModel {\n  constructor(response) {\n    this.hits = response.hits;\n    this.total = response.total;\n    this.totalHits = response.totalHits;\n  }\n}\n\n/**\n * Client for interacting with Pixabay API\n */\nclass PixabayApi {\n  /**\n   * Creates a new Pixabay API client\n   * @param {string} apiKey - Pixabay API key\n   */\n  constructor(apiKey) {\n    this.apiKey = apiKey;\n    axios.defaults.baseURL = 'https://pixabay.com/api/';\n  }\n\n  /**\n   * Fetches images matching the provided query\n   * @param {string} query - Search term\n   * @param {number} page - Page number for pagination\n   * @returns {Promise<ResponseModel>} - Promise resolving to array of image objects\n   */\n  async fetchImages(query, page = 1) {\n    const config = new RequestConfig();\n    config.setApiKey(this.apiKey);\n    config.setQuery(query);\n    config.setPage(page);\n\n    const response = await this._get('', config);\n    return new ResponseModel(response);\n  }\n\n  /**\n   * Makes a GET request to the API\n   * @param {string} url - API endpoint\n   * @param {Object} config - Request configuration\n   * @returns {Promise<Object>} - Promise resolving to API response data\n   * @private\n   */\n  _get(url, config) {\n    return axios.get(url, config)\n      .then(response => response.data)\n      .catch(error => this._onError(error, url, config));\n  }\n\n  /**\n   * Handles API errors with rate limit retry logic\n   * @param error - Error object from axios\n   * @param {string} url - Original request URL\n   * @param {Object} config - Original request configuration\n   * @returns {Promise<Object>} - Promise that may retry the request\n   * @private\n   */\n  _onError(error, url, config) {\n    if (error.status === 429) {\n      const retryAfter = error.response.headers['x-ratelimit-reset'] ||\n        error.response.headers['X-RateLimit-Reset'] ||\n        60;\n      console.warn(`Rate limit exceeded. Retrying after ${retryAfter} seconds...`);\n\n      return new Promise((resolve) => {\n        setTimeout(() => {\n          resolve(this._get(url, config));\n        }, retryAfter * 1000);\n      });\n    } else {\n      console.error('Error fetching images:', error);\n      throw error;\n    }\n  }\n}\n\nexport { PixabayApi, RequestConfig };","/**\n * Class representing a Pixabay image hit response.\n */\nclass PixabayImage {\n  /**\n   * Create a PixabayImage.\n   * @param {Object} data - The image data.\n   * @param {number} data.id - The image ID.\n   * @param {string} data.type - The type of the image.\n   * @param {string} data.tags - The tags associated with the image.\n   * @param {string} data.webformatURL - The URL of the web format image.\n   * @param {string} data.largeImageURL - The URL of the original image.\n   * @param {number} data.views - The number of views.\n   * @param {number} data.downloads - The number of downloads.\n   * @param {number} data.likes - The number of likes.\n   * @param {number} data.comments - The number of comments.\n   * @param {string} data.user - The username of the user who uploaded the image.\n   */\n  constructor(data) {\n    this.id = data.id;\n    this.type = data.type;\n    this.tags = data.tags;\n    this.webformatURL = data.webformatURL;\n    this.imageURL = data.largeImageURL;\n    this.views = data.views;\n    this.downloads = data.downloads;\n    this.likes = data.likes;\n    this.comments = data.comments;\n    this.user = data.user;\n  }\n}\n\n/**\n * Class for rendering an image.\n */\nclass ImageRenderer {\n  constructor() {\n    this._imageElement = document.createElement('img');\n  }\n\n  /**\n   * Sets the image source and alt text.\n   * @param {PixabayImage} image - The image to render.\n   */\n  setImage(image) {\n    this._imageElement.src = image.webformatURL;\n    this._imageElement.alt = image.tags;\n    this._imageElement.width = 360;\n    this._imageElement.height = 200;\n    this._imageElement.title = image.tags;\n    this._imageElement.setAttribute('data-id', image.id.toString());\n    this._imageElement.setAttribute('data-user', image.user);\n  }\n\n  /**\n   * Renders the image element.\n   * @returns {HTMLImageElement} - The image element.\n   */\n  render() {\n    return this._imageElement;\n  }\n}\n\n/**\n * Class for rendering a gallery of images.\n */\nclass GalleryRenderer {\n  /**\n   * Creates a new GalleryRenderer.\n   * @param {string} gallerySelector - The CSS class for the gallery.\n   * @param {Element} parentElement - The parent element to append the gallery to.\n   */\n  constructor(gallerySelector, parentElement) {\n    this._parentElement = parentElement;\n    if (!this._parentElement) {\n      throw new Error(`Parent element ${parentElement} not found`);\n    }\n\n    // if parent element already has a child with the same class, use that\n    const existingGallery = this._parentElement.querySelector(`.${gallerySelector}`);\n    if (existingGallery) {\n      this._galleryElement = existingGallery;\n      return;\n    }\n\n    // create a new gallery element\n    this._galleryElement = document.createElement('ul');\n    this._galleryElement.classList.add(gallerySelector);\n    this._moreButton = null;\n  }\n\n  /**\n   * Appends images to the gallery.\n   * @param images\n   */\n  appendImages(images) {\n    const listItems = images.map(image => this._generateListItem(new PixabayImage(image)));\n    this._galleryElement.append(...listItems);\n  }\n\n  /**\n   * Adds a \"Load more\" button to the gallery.\n   * @param page\n   * @param totalHits\n   * @param callback\n   */\n  addMoreButton(page, totalHits, callback) {\n    // Remove existing button if it exists\n    if (this._parentElement.contains(this._moreButton)) {\n      this._parentElement.removeChild(this._moreButton);\n    }\n\n    if (totalHits > 0 && totalHits > page * 15) {\n      this._moreButton = document.createElement('button');\n      this._moreButton.textContent = 'Load more';\n      this._moreButton.classList.add('load-more');\n      this._moreButton.addEventListener('click', callback);\n    }\n    else {\n      this._moreButton = document.createElement('p');\n      this._moreButton.textContent = 'We\\'re sorry, but you\\'ve reached the end of search results.';\n      this._moreButton.classList.add('no-more');\n    }\n  }\n\n  /**\n   * Generates a list item for the gallery.\n   * @param image\n   * @returns {HTMLLIElement}\n   * @private\n   */\n  _generateListItem(image) {\n    const imageRenderer = new ImageRenderer();\n    imageRenderer.setImage(image);\n    const listItem = document.createElement('li');\n    const link = document.createElement('a');\n    link.href = image.imageURL;\n    link.append(imageRenderer.render());\n    link.append(this._generateDescription(image));\n    listItem.appendChild(link);\n    return listItem;\n  }\n\n  /**\n   * Generates a description table for the image.\n   * @param {PixabayImage} image - The image to describe.\n   * @returns {HTMLTableElement} - The description table.\n   * @private\n   */\n  _generateDescription(image) {\n    const headers = ['Likes', 'Views', 'Comments', 'Downloads'];\n    const table = document.createElement('table');\n    const headerRow = document.createElement('tr');\n    headers.forEach(header => {\n      const th = document.createElement('th');\n      th.textContent = header;\n      headerRow.appendChild(th);\n    });\n    table.appendChild(headerRow);\n    const valuesRow = document.createElement('tr');\n    const values = [\n      image.likes,\n      image.views,\n      image.comments,\n      image.downloads,\n    ];\n    values.forEach(value => {\n      const td = document.createElement('td');\n      td.textContent = `${value}`;\n      valuesRow.appendChild(td);\n    });\n    table.appendChild(valuesRow);\n    return table;\n  }\n\n  /**\n   * Renders the gallery.\n   */\n  render() {\n    if (!this._parentElement) {\n      throw new Error(`Parent element ${this._parentElement} not found`);\n    }\n    // Append the gallery to the parent element if it doesn't already exist\n    if (!this._parentElement.contains(this._galleryElement)) {\n      this._parentElement.appendChild(this._galleryElement);\n    }\n\n    if (this._moreButton) {\n      this._parentElement.appendChild(this._moreButton);\n    }\n  }\n\n  /**\n   * Clears the gallery.\n   */\n  clear() {\n    this._galleryElement.innerHTML = '';\n    this._parentElement.innerHTML = '';\n  }\n}\n\nexport { GalleryRenderer, PixabayImage, ImageRenderer };","import { PixabayApi } from './js/pixabay-api.js';\nimport { GalleryRenderer } from './js/render-functions.js';\nimport SimpleLightbox from 'simplelightbox';\nimport iziToast from 'izitoast';\n\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport 'izitoast/dist/css/iziToast.min.css';\n\n/**\n * Class for handling image search functionality.\n * This class initializes the search form, handles search queries,\n * fetches images from the Pixabay API, and manages the gallery rendering.\n */\nclass ImageSearch {\n  constructor() {\n    this._searchForm = document.querySelector('form.search-form');\n    this._galleryElement = document.querySelector('.gallery');\n    this._galleryRenderer = new GalleryRenderer('gallery', this._galleryElement);\n    this._pixabayApi = new PixabayApi('49652038-e061cdaf0adfcf3d7bc5fddbb');\n    this._lightbox = new SimpleLightbox('div.gallery ul.gallery li a', {\n      captionsData: 'alt',\n      captionDelay: 250,\n    });\n    this._page = 1;\n    this._loader = document.querySelector('.loader');\n    this._query = null;\n  }\n\n  /**\n   * Initializes the search form event listeners.\n   */\n  async init() {\n    this._searchForm.addEventListener('submit', async (event) => {\n      event.preventDefault();\n      const query = event.target.querySelector('input[name=\"searchQuery\"]').value;\n      if (!query) {\n        iziToast.error({\n          message: 'Please enter a search term.',\n        });\n        return;\n      }\n\n      this._query = query;\n      this._resetPaging();\n      this._searchForm.reset();\n      this._galleryRenderer.clear();\n\n      await this._onSearch();\n    });\n  }\n\n  _resetPaging() {\n    this._page = 1;\n  }\n\n  /**\n   * Handles the search event.\n   */\n  async _onSearch() {\n    this._toggleLoader();\n    const response = await this._pixabayApi.fetchImages(this._query, this._page);\n    this._toggleLoader();\n    if (!response.hits || !response.hits.length) {\n      iziToast.show({\n        color: '#EF4040',\n        icon: 'icon-close',\n        title: '❌',\n        message: 'Sorry, there are no images matching your search query. Please try again!',\n      });\n      return;\n    }\n\n    this._galleryRenderer.appendImages(response.hits);\n\n    this._galleryRenderer.addMoreButton(this._page, response.totalHits, this._loadMore.bind(this));\n    this._galleryRenderer.render();\n    this._lightbox.refresh();\n\n  }\n\n  /**\n   * Scrolls smoothly\n   */\n  _scrollByOneRow() {\n    const firstRowItem = document.querySelector('ul.gallery li');\n    if (firstRowItem) {\n      const rowHeight = firstRowItem.offsetHeight + firstRowItem.offsetHeight; // Adding margin\n      window.scrollBy({ top: rowHeight, behavior: 'smooth' });\n    }\n  }\n\n  /**\n   * Loads more images when the \"Load more\" button is clicked.\n   * @returns {Promise<void>}\n   * @private\n   */\n  async _loadMore() {\n    this._page++;\n    await this._onSearch(this._query);\n    // Scroll to the gallery element after loading new images\n    this._scrollByOneRow();\n  }\n\n  /**\n   * Toggles the loader visibility.\n   */\n  _toggleLoader() {\n    this._loader.classList.toggle('show');\n  }\n}\n\nconst search = new ImageSearch();\nsearch.init().catch(error => {\n  console.error(error);\n});"],"names":["RequestConfig","apiKey","query","page","ResponseModel","response","PixabayApi","axios","config","url","error","retryAfter","resolve","PixabayImage","data","ImageRenderer","image","GalleryRenderer","gallerySelector","parentElement","existingGallery","images","listItems","totalHits","callback","imageRenderer","listItem","link","headers","table","headerRow","header","th","valuesRow","value","td","ImageSearch","SimpleLightbox","event","iziToast","firstRowItem","rowHeight","search"],"mappings":"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"}